{"version":3,"sources":["Components/Header.js","firebase.config.js","Actions/NoteActions.js","Components/NoteList.js","Components/FormElement.js","Components/Containter.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","connectData","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ref","Actions_NoteActions","NoteActions","Object","classCallCheck","this","data","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","push","objectSpread","stop","_x","apply","arguments","_ref2","_callee2","_context2","_x2","_ref3","_callee3","params","_context3","objectWithoutProperties","child","update","t0","console","warn","_x3","_ref4","_callee4","_context4","on","snapshot","val","e","_x4","_ref5","_callee5","_context5","remove","_x5","NoteList","props","possibleConstructorReturn","getPrototypeOf","call","onLoad","onRemove","onEdit","_this","notes","keys","map","index","key","role","data-parent","title","onClick","aria-labelledby","content","aria-multiselectable","renderItem","connect","state","list","NoteAction","getAll","getItem","FormElement","noteTitle","noteContent","prevProps","item","log","setState","event","name","target","value","defineProperty","_this$state","editNote","addDataStore","JSON","stringify","_this$state2","htmlFor","defaultValue","onChange","bind","placeholder","aria-describedby","addNote","save","edit","Containter","Components_NoteList","Components_FormElement","storeInitialState","allReducer","redux","length","undefined","action","store","thunk","App","es","Components_Header","Components_Containter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oLA8BeA,0LA1BP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KACjCJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAA2BE,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,sBACpLV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CAA+CQ,GAAG,oBACjEX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWC,KAAK,KAA7B,QAAsCJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,yBATzCS,sECWRC,GAFSC,gBATT,CACTC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,kBAKIN,aAAoBO,IAAI,UC8CpCC,EAAA,eAxDX,SAAAC,IAAcC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,oDAKRI,GACF,sBAAAC,EAAAJ,OAAAK,EAAA,EAAAL,CAAAM,EAAA7B,EAAA8B,KAAO,SAAAC,EAAOC,GAAP,OAAAH,EAAA7B,EAAAiC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACHxB,EAAYyB,KAAZd,OAAAe,EAAA,EAAAf,CAAA,GAAqBG,IACrBM,EAAS,CAAC5B,KAAM,WAAYsB,SAFzB,wBAAAQ,EAAAK,SAAAR,MAAP,gBAAAS,GAAA,OAAAb,EAAAc,MAAAhB,KAAAiB,YAAA,mCAMIhB,GACJ,sBAAAiB,EAAApB,OAAAK,EAAA,EAAAL,CAAAM,EAAA7B,EAAA8B,KAAO,SAAAc,EAAOZ,GAAP,OAAAH,EAAA7B,EAAAiC,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,OACHJ,EAAS,CAAC5B,KAAM,kBAAmBsB,SADhC,wBAAAmB,EAAAN,SAAAK,MAAP,gBAAAE,GAAA,OAAAH,EAAAF,MAAAhB,KAAAiB,YAAA,gCAKChB,GACD,sBAAAqB,EAAAxB,OAAAK,EAAA,EAAAL,CAAAM,EAAA7B,EAAA8B,KAAO,SAAAkB,EAAOhB,GAAP,IAAAtB,EAAAuC,EAAA,OAAApB,EAAA7B,EAAAiC,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,UAAAc,EAAAf,KAAA,EAEMzB,EAAiBgB,EAAjBhB,GAAOuC,EAFb1B,OAAA4B,EAAA,EAAA5B,CAEuBG,EAFvB,QAGKhB,EAHL,CAAAwC,EAAAd,KAAA,aAGe,cAHf,OAICxB,EAAYwC,MAAM1C,GAAI2C,OAAtB9B,OAAAe,EAAA,EAAAf,CAAA,GAAiC0B,IACjCjB,EAAS,CAAC5B,KAAM,cALjB8C,EAAAd,KAAA,gBAAAc,EAAAf,KAAA,EAAAe,EAAAI,GAAAJ,EAAA,SAOCK,QAAQC,KAARN,EAAAI,IAPD,yBAAAJ,EAAAX,SAAAS,EAAA,iBAAP,gBAAAS,GAAA,OAAAV,EAAAN,MAAAhB,KAAAiB,YAAA,kCAYGhB,GACH,sBAAAgC,EAAAnC,OAAAK,EAAA,EAAAL,CAAAM,EAAA7B,EAAA8B,KAAO,SAAA6B,EAAO3B,GAAP,OAAAH,EAAA7B,EAAAiC,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OACH,IACIxB,EAAYiD,GAAG,QAAS,SAACC,GACrB9B,EAAS,CAAC5B,KAAM,iBAAkBsB,KAAMoC,EAASC,UAEvD,MAAMC,IALL,wBAAAJ,EAAArB,SAAAoB,MAAP,gBAAAM,GAAA,OAAAP,EAAAjB,MAAAhB,KAAAiB,YAAA,kCAWGhC,GACH,sBAAAwD,EAAA3C,OAAAK,EAAA,EAAAL,CAAAM,EAAA7B,EAAA8B,KAAO,SAAAqC,EAAOnC,GAAP,OAAAH,EAAA7B,EAAAiC,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,UAAAgC,EAAAjC,KAAA,EAEMzB,EAFN,CAAA0D,EAAAhC,KAAA,aAEgB,2BAFhB,OAGCxB,EAAYwC,MAAM1C,GAAI2D,SAHvBD,EAAAhC,KAAA,eAAAgC,EAAAjC,KAAA,EAAAiC,EAAAd,GAAAc,EAAA,SAKCb,QAAQC,KAARY,EAAAd,IALD,wBAAAc,EAAA7B,SAAA4B,EAAA,iBAAP,gBAAAG,GAAA,OAAAJ,EAAAzB,MAAAhB,KAAAiB,YAAA,aC3CF6B,cACF,SAAAA,EAAYC,GAAQ,OAAAjD,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,GAAAhD,OAAAkD,EAAA,EAAAlD,CAAAE,KAAAF,OAAAmD,EAAA,EAAAnD,CAAAgD,GAAAI,KAAAlD,wFAKhBA,KAAK+C,MAAMI,0CAGNlE,GACLe,KAAK+C,MAAMK,SAASnE,kCAGjBuC,GACHxB,KAAK+C,MAAMM,OAAO7B,wCAGT,IAAA8B,EAAAtD,KACJuD,GAASvD,KAAK+C,OAAS,IAAvBQ,MAGL,OAFczD,OAAO0D,KAAKD,GAEXE,IAAI,SAACxE,EAAIyE,GACpB,OACIpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOkF,IAAK1E,GACvBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcmF,KAAK,MAAM3E,GAAI,kBAAkBA,GAC1DX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACdH,EAAAC,EAAAC,cAAA,KAAGI,cAAY,WAAWiF,cAAY,YAAYnF,KAAM,YAAYO,EAAIF,gBAAc,OAAOD,gBAAe,WAAWG,GAClHsE,EAAMtE,GAAI6E,SAInBxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,uBACVsF,QAAS,SAAAxB,GAAC,OAAIe,EAAKD,OAALvD,OAAAe,EAAA,EAAAf,CAAA,CAAab,MAAOsE,EAAMtE,OAF5C,YAKAX,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BsF,QAAU,SAAAxB,GAAC,OAAIe,EAAKF,SAASnE,KAA3E,YAKRX,EAAAC,EAAAC,cAAA,OAAKS,GAAI,WAAWA,EAAIR,UAAU,cAAcmF,KAAK,WAAWI,kBAAiB,kBAAkB/E,GAC/FX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACV8E,EAAMtE,GAAIgF,8CAS/B,OACI3F,EAAAC,EAAAC,cAAA,OAAKS,GAAG,WAAW2E,KAAK,UAAUM,uBAAqB,QAClDlE,KAAKmE,qBAxDCjF,aAmFRkF,cArBS,SAACC,EAAOtB,GAC5B,MAAO,CACHQ,MAAOc,EAAMd,MAAMe,OAIA,SAAC/D,EAAUwC,GAClC,MAAO,CACHI,OAAQ,SAAC3B,GACLjB,EAASgE,EAAWC,WAExBpB,SAAU,SAAC5B,GACPjB,EAASgE,EAAW3B,OAAOpB,KAE/B6B,OAAQ,SAAC7B,GACLjB,EAASgE,EAAWE,QAAQjD,OAMzB4C,CAA6CtB,WCnFtD4B,cACF,SAAAA,EAAY3B,GAAO,IAAAO,EAAA,OAAAxD,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,IACfpB,EAAAxD,OAAAkD,EAAA,EAAAlD,CAAAE,KAAAF,OAAAmD,EAAA,EAAAnD,CAAA4E,GAAAxB,KAAAlD,KAAM+C,KACDsB,MAAQ,CACTM,UAAW,GACXC,YAAa,GACb3F,GAAG,IALQqE,kFASAuB,GAAW,IACrBC,EAAQ9E,KAAK+C,MAAb+B,KACFA,GAAQD,EAAUC,MAAQA,IACzBhD,QAAQiD,IAAI,SAAUD,GACtB9E,KAAKgF,SAAS,CACV/F,GAAI6F,EAAK7F,GACT0F,UAAWG,EAAKhB,MAChBc,YAAaE,EAAKb,4CAKrBgB,GACL,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAC3BpF,KAAKgF,SAALlF,OAAAuF,EAAA,EAAAvF,CAAA,GAAgBoF,EAAOE,oCAGnBH,GAAO,IAAAK,EACwCtF,KAAKqE,MAAxCP,EADLwB,EACNX,UAA+BV,EADzBqB,EACYV,YAAsB3F,EADlCqG,EACkCrG,GACzC6E,GAAUG,GAIVhF,EAGAe,KAAK+C,MAAMwC,SAAS,CAACtG,KAAI6E,QAAOG,YAFhCjE,KAAK+C,MAAMyC,aAAa,CAAC1B,QAAOG,YAKpCjE,KAAKgF,SAAS,CACV/F,GAAI,GACJ0F,UAAW,GACXC,YAAa,MAZb9C,QAAQiD,IAAI,iEAiBhBjD,QAAQiD,IAAI,aAAcU,KAAKC,UAAU1F,KAAKqE,QADzC,IAAAsB,EAE0B3F,KAAKqE,MAA/BO,EAFAe,EAEAf,YAAaD,EAFbgB,EAEahB,UAClB,OACIrG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKwB,KAAKqE,MAAMpF,GAAK,WAAQ,UAA7B,SACAX,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,aAAf,yBACAtH,EAAAC,EAAAC,cAAA,SACIqH,aAAclB,EACdmB,SAAY9F,KAAK8F,SAASC,KAAK/F,MAC/BrB,KAAK,OAAOuG,KAAK,YACjBjG,GAAG,YAAYR,UAAU,eACzBuH,YAAY,iCAAeC,mBAAiB,eAChD3H,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,cAAjC,mBAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,eAAf,sBACAtH,EAAAC,EAAAC,cAAA,YACIC,UAAU,eAAeuH,YAAY,+BACrCH,aAAcjB,EACdkB,SAAY9F,KAAK8F,SAASC,KAAK/F,MAC/BrB,KAAK,OAAOuG,KAAK,cAAcjG,GAAG,gBAEtCX,EAAAC,EAAAC,cAAA,SAAOS,GAAG,gBAAgBR,UAAU,cAApC,iCAEJH,EAAAC,EAAAC,cAAA,UACIuF,QAAW/D,KAAKkG,QAAQH,KAAK/F,MAC7BrB,KAAK,QAAQF,UAAU,6BAA6BuB,KAAKqE,MAAMpF,GAAK,WAAQ,oBA5E1EC,aAoGXkF,cAjBS,SAACC,EAAOtB,GAC5B,MAAO,CACH+B,KAAOT,EAAMd,MAAMuB,OAID,SAACvE,EAAUwC,GACjC,MAAO,CACHyC,aAAe,SAACvF,GACZM,EAASV,EAAYsG,KAAKlG,KAE9BsF,SAAU,SAACtF,GACPM,EAASV,EAAYuG,KAAKnG,OAKvBmE,CAA4CM,GCnF5C2B,mLAfP,OACI/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC8H,EAAD,OAEJhI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAC+H,EAAgBvG,KAAK+C,iBATrB7D,6BCCnBsH,EAAoB,CACtBlC,KAAM,GACNQ,KAAM,GACNnG,KAAM,IAuBJ8H,EAAaC,IAAsB,CACrCnD,MArBU,WAAuC,IAAtCc,EAAsCpD,UAAA0F,OAAA,QAAAC,IAAA3F,UAAA,GAAAA,UAAA,GAA9BuF,EAAmBK,EAAW5F,UAAA0F,OAAA,EAAA1F,UAAA,QAAA2F,EACjD,OAAQC,EAAOlI,MACX,IAAK,WACD,OAAO0F,EACX,IAAK,iBAGD,OAFAA,EAAMC,KAANxE,OAAAe,EAAA,EAAAf,CAAA,GAAiB+G,EAAO5G,aACjB4G,EAAO5G,KACPH,OAAAe,EAAA,EAAAf,CAAA,GAAIuE,EAAUwC,GACzB,IAAK,kBAID,OAHAxC,EAAMS,KAANhF,OAAAe,EAAA,EAAAf,CAAA,GAAiB+G,EAAO5G,aACjB4G,EAAO5G,KACd6B,QAAQiD,IAARjF,OAAAe,EAAA,EAAAf,CAAA,GAAgBuE,EAAUwC,IACnB/G,OAAAe,EAAA,EAAAf,CAAA,GAAIuE,EAAUwC,GACzB,IAAK,YAEL,QACI,OAAOxC,MAQNyC,EAAQJ,IACjBD,EACAC,IAAsBK,MCjBXC,mLATX,OACE1I,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAUH,MAAOA,GACfxI,EAAAC,EAAAC,cAAC0I,EAAD,MACA5I,EAAAC,EAAAC,cAAC2I,EAAD,cANUjI,aCIEkI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpJ,EAAAC,EAAAC,cAACmJ,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.91fce9f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n                <a className=\"navbar-brand\" href=\"\"></a>\n                <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\n                <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavId\">\n                <ul className=\"navbar-nav mt-2 mt-lg-0\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    {/* <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Link</a>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\n                            <a className=\"dropdown-item\" href=\"#\">Action 1</a>\n                            <a className=\"dropdown-item\" href=\"#\">Action 2</a>\n                        </div>\n                    </li> */}\n                </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Header;","import * as firebase from \"firebase\";\n\nvar config = {\n    apiKey: \"AIzaSyBf8aVrI8KK-NxMPEAutXw746PPGoST0qA\",\n    authDomain: \"nodereactnoan.firebaseapp.com\",\n    databaseURL: \"https://nodereactnoan.firebaseio.com\",\n    projectId: \"nodereactnoan\",\n    storageBucket: \"nodereactnoan.appspot.com\",\n    messagingSenderId: \"1021551849800\"\n};\n\nvar firebaseConnect = firebase.initializeApp(config);\n\nexport const connectData = firebase.database().ref(\"notes\");\n\nexport const editData = ({id, data}) => {\n    try {\n        if(!id) throw \"Id empty\";\n\n        return firebase.database.ref(\"notes/\"+id).set({...data})\n    } catch(e) {console.warn(e)}\n}\n\n    // get value 1 lần\n    // connectData.child(\"1\").once(\"value\").then((snapshot) => {\n    //     console.log(\"snapshot\", snapshot.val())\n    // })\n\n    // // THeo dõi sự thay đổi giá trị mới \n    // connectData.on(\"value\", (snapshot)=> {\n    //     console.log(\"new post element\", snapshot.val())\n    // })\n\n\nclass NotesController {\n    constructor(){\n        this.data = firebase.database.ref(\"notes\");\n\n    }\n\n    create (data) {\n        let connectData = firebase.database().ref(\"notes\");\n        connectData.push({...data})\n    }\n\n    red(){\n        var connectData = firebase.database().ref(\"notes\");\n\n        connectData.once(\"value\").then((snapshot) => {\n            console.log(\"snapshot\", snapshot.val())\n        })\n    }\n\n    getItem(id) {\n        try {\n            if(!id) return \"id not true\";\n\n            this.data.child.once(\"value\").then((snapshot) => {\n                console.log(\"noi dung\")\n            })\n        } catch(e) {\n            console.warn(\"Content error\", e)\n        }\n    }\n\n    update ({id, data}){\n        try {\n            if(!id) throw \"Không co id\";\n            \n            var connectData = firebase.database().ref(`notes/${id}`);\n            firebase.database().ref(\"note\").child(\"id\").update({/*Noid dung*/})\n            connectData.set({...data})\n        } catch(e) {\n            console.log(\"e\");\n        }\n    }\n\n    delete (id) {\n        try {\n            if (!id) throw \"Không thể xóa\";\n            var connectData = firebase.database.ref(\"notes\");\n            connectData.child(id).remove();\n        } catch(e){\n            console.warn(\"can't delete\")\n        }\n    }\n}","import {connectData} from \"../firebase.config\"; \n\nclass NoteActions {\n    constructor(){\n\n    }\n\n    \n    save (data) {\n        return async (dispatch) => {\n            connectData.push({...data})\n            dispatch({type: \"ADD_NOTE\", data})\n        }\n    }\n\n    getItem(data) {\n        return async (dispatch) => {\n            dispatch({type: \"FETCH_ITEM_NOTE\", data})\n        }\n    }\n\n    edit(data) {\n        return async (dispatch) => {\n            try {\n                let {id, ...params} = data;\n                if(!id) throw \"Khong co id\";\n                connectData.child(id).update({...params});\n                dispatch({type: \"EDIT_NOTE\"})\n            } catch(e) {\n                console.warn(e)\n            }\n        }\n    }\n\n    getAll(data) {\n        return async (dispatch)=> {\n            try {\n                connectData.on(\"value\", (snapshot) =>{\n                    dispatch({type: \"FETCH_ALL_NOTE\", data: snapshot.val()})\n                })\n            } catch(e){\n                \n            }\n        }\n    }\n\n    remove(id) {\n        return async (dispatch) => {\n            try {\n                if (!id) throw \"Không thể xóa\";\n                connectData.child(id).remove();\n            } catch(e) {\n                console.warn(e)\n            }\n        }\n    }\n\n}\n\nexport default new NoteActions();","import React, { Component, Fragment } from 'react';\nimport {connect} from \"react-redux\";\nimport NoteAction from \"../Actions/NoteActions\";\n\nclass NoteList extends Component {\n    constructor(props) {\n        super();\n    }\n\n    componentDidMount() {\n        this.props.onLoad();\n    }\n\n    onRemove(id){\n        this.props.onRemove(id);\n    }\n\n    onEdit(params) { \n        this.props.onEdit(params)\n    }\n\n    renderItem() {\n        let {notes} = this.props || {};\n        let idNotes = Object.keys(notes);\n\n        return idNotes.map((id, index) => {\n            return (\n                <div className=\"card\" key={id}>\n                    <div className=\"card-header\" role=\"tab\" id={\"header-note-id-\"+id}>\n                        <div>\n                            <h5 className=\"mb-0\">\n                            <a data-toggle=\"collapse\" data-parent=\"#noteList\" href={\"#note-id-\"+id} aria-expanded=\"true\" aria-controls={\"note-id-\"+id}>\n                                {notes[id].title}\n                            </a>\n                            </h5>\n                        </div>\n                        <div className=\"btn-group float-right\">\n                            <button \n                                className=\"btn btn-outline-info\"\n                                onClick={e => this.onEdit({id, ...notes[id]})}>\n                                Sửa\n                            </button>\n                            <button className=\"btn btn-outline-secondary\" onClick= {e => this.onRemove(id)}>\n                                Xóa\n                            </button>\n                        </div>\n                    </div>\n                    <div id={\"note-id-\"+id} className=\"collapse in\" role=\"tabpanel\" aria-labelledby={\"header-note-id-\"+id}>\n                        <div className=\"card-body\">\n                            {notes[id].content}\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div id=\"noteList\" role=\"tablist\" aria-multiselectable=\"true\">\n                {this.renderItem()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        notes: state.notes.list,\n    }\n}\n\nconst mapDispatchToPRops = (dispatch, props) => {\n    return {\n        onLoad: (params) => {\n            dispatch(NoteAction.getAll())\n        },\n        onRemove: (params) => {\n            dispatch(NoteAction.remove(params))\n        },\n        onEdit: (params) => {\n            dispatch(NoteAction.getItem(params))\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToPRops)(NoteList);","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport NoteActions from \"../Actions/NoteActions\";\n\nclass FormElement extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            noteTitle: \"\",\n            noteContent: \"\",\n            id:\"\",\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        let {item} = this.props;\n        if(item && prevProps.item != item) {\n            console.log(\"123213\", item)\n            this.setState({\n                id: item.id, \n                noteTitle: item.title,\n                noteContent: item.content\n            })\n        }\n    }\n\n    onChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({[name]: value});\n    }\n\n    addNote(event) {\n        let {noteTitle: title, noteContent: content, id} = this.state;\n        if(!title || !content) {\n            console.log(\"KHong duoc de trong noi dung\");\n            return\n        }\n        if(!id) {\n            this.props.addDataStore({title, content});\n        } else {\n            this.props.editNote({id, title, content})\n        }\n\n        this.setState({\n            id: \"\",\n            noteTitle: \"\",\n            noteContent: \"\"\n        })\n    }\n    \n    render() {\n        console.log(\"this.state\", JSON.stringify(this.state))\n        let {noteContent, noteTitle} = this.state;\n        return (\n            <div>\n                <h3>{this.state.id ? \"Sửa\" : \"Thêm\"} note</h3>\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"noteTitle\">Tiêu đề </label>\n                        <input \n                            defaultValue={noteTitle}\n                            onChange = {this.onChange.bind(this)}\n                            type=\"text\" name=\"noteTitle\" \n                            id=\"noteTitle\" className=\"form-control\" \n                            placeholder=\"Nhập tiêu đề\" aria-describedby=\"helpIdNote\" />\n                        <small id=\"helpIdNote\" className=\"text-muted\">help text node</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"noteContent\">Nội dung note</label>\n                        <textarea \n                            className=\"form-control\" placeholder=\"Nhập nội dung note\"\n                            defaultValue={noteContent}\n                            onChange = {this.onChange.bind(this)}\n                            type=\"text\" name=\"noteContent\" id=\"noteContent\" \n                             />\n                        <small id=\"helpIdContent\" className=\"text-muted\">NHập nội dung note</small>\n                    </div>\n                    <button \n                        onClick = {this.addNote.bind(this)}\n                        type=\"reset\" className=\"btn btn-primary btn-block\">{this.state.id ? \"Lưu\" : \"Thêm\"}</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        item : state.notes.item,\n    }\n}\n\nconst mapDispatchToProp = (dispatch, props) => {\n    return {\n        addDataStore : (data) => {\n            dispatch(NoteActions.save(data))\n        },\n        editNote: (data) => {\n            dispatch(NoteActions.edit(data))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProp)(FormElement);","import React, { Component } from 'react';\nimport NoteList from \"./NoteList\";\nimport FormElement from \"./FormElement\";\n\nclass Containter extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <NoteList />\n                    </div>\n                    <div className=\"col-4\">\n                        <FormElement {...this.props}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Containter;","\nimport {connectData} from \"./firebase.config\";\nimport * as redux from \"redux\";\nimport thunk from \"redux-thunk\";    // add redux thun\n\nconst storeInitialState = {\n    list: {},\n    item: {},\n    type: \"\"\n}\n\nconst notes = (state = storeInitialState, action) => {\n    switch (action.type) {\n        case \"ADD_NOTE\":\n            return state;\n        case \"FETCH_ALL_NOTE\":\n            state.list = {...action.data};\n            delete action.data;\n            return {...state ,...action};\n        case \"FETCH_ITEM_NOTE\":\n            state.item = {...action.data};\n            delete action.data\n            console.log({...state, ...action})\n            return {...state, ...action}\n        case \"EDIT_NOTE\":\n            return state;\n        default:\n            return state;\n    }\n}\n\nconst allReducer = redux.combineReducers({\n    notes,\n})\n\nexport const store = redux.createStore(\n    allReducer,\n    redux.applyMiddleware(thunk)    \n);","import React, { Component } from 'react';\nimport './App.css';\nimport Header from \"./Components/Header\";\nimport Containter from \"./Components/Containter\";\nimport {connectData} from \"./firebase.config\";\nimport { Provider } from 'react-redux'\nimport {store} from \"./store\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Header />\n        <Containter />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}